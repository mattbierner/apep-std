{"version":3,"sources":["vars.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAC;;;;;AACb,IAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;;AAAC,AAkBrB,IAAM,aAAa,WAAb,aAAa,GAAG,SAAhB,aAAa,CAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAK;AACpD,QAAM,YAAY,GAAG,GAAG,CAAC,KAAK,CAC1B,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,EAC5B,UAAA,GAAG;eACC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAAA,CAAC,CAAC;;AAEnD,QAAM,OAAO,GAAG,EAAE,CAAC;AACnB,WAAO,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CACxB,KAAK,CAAC,UAAA,CAAC;eACJ,CAAC,KAAK,OAAO,GAAG,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAAA,CAAC,CAAC;CACtD;;;;;;;;;;;;;;AAAC,AAcK,IAAM,KAAK,WAAL,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE,CAAC;WAAK,CAAC,GAAG,CAAC;CAAA,EAAE,EAAE,CAAC,CAAC","file":"vars.js","sourcesContent":["/**\n\n*/\n\"use strict\";\nconst pep = require('apep');\n\n\n/**\n    Get the currently stored value of a variable or compute it with a generator.\n\n    Yields the result value.\n\n    @param f Accumulator function to reduce multiple yields from `generator` to\n        a single value.\n    @param z Initial value for accumulator.\n    @param name Variable name.\n    @param generator Generator run to produce the value.\n\n    The function always stores value as strings. The output of multiple\n    yielding generators are joined together into a single string value which \n    is yielded once.\n*/\nexport const storeCombined = (f, z, name, generator) => {\n    const computeValue = pep.chain(\n        pep.combine(f, z, generator),\n        val =>\n            pep.seq(pep.set(name, val), pep.lit(val)));\n    \n    const nothing = {};\n    return pep.get(name, nothing)\n        .chain(x =>\n            x === nothing ? computeValue : pep.lit(x));\n};\n\n/**\n    Get the currently stored value of a variable or compute it with a generator.\n\n    Yields the result value.\n\n    @param name Variable name.\n    @param generator Generator run to produce the value.\n\n    The function always stores value as strings. The output of multiple\n    yielding generators are joined together into a single string value which \n    is yielded once.\n*/\nexport const store = storeCombined.bind(null, (p, c) => p + c, '');\n\n"],"sourceRoot":"/source/"}